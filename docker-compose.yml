# version: '3.7'

services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: "${PREFIX}rabbitmq"
    ports:
      - "${RABBITMQ_PORT:-5672}:5672"
      - "${RABBITMQ_MANAGEMENT_PORT:-15672}:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: "${PREFIX}redis"
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  queue:
    build: ./queue
    container_name: "${PREFIX}queue"
    user: "${PUID}:${PGID}"
    volumes:
      - ./shared/pipeline:/pipeline
      - ./shared/originals:/originals
    depends_on:
      - rabbitmq
      - redis
    # Uncomment below if you wish to expose a port
    # ports:
    #   - "${QUEUE_PORT:-9002}:9002"
    restart: unless-stopped

  watcher:
    build: ./watcher
    container_name: "${PREFIX}watcher"
    user: "${PUID}:${PGID}"
    volumes:
      - ./shared/downloads:/downloads
      - ./shared/pipeline:/pipeline
      - ./shared/originals:/originals
    depends_on:
      - rabbitmq
    # ports:
    #   - "${WATCHER_PORT:-9001}:9001"
    restart: unless-stopped

  splitter:
    build: ./splitter
    container_name: "${PREFIX}splitter"
    environment:
      - SPLEETER_MODEL_PATH=/app/pretrained_models
    volumes:
      - ./shared/pipeline:/pipeline
      - ./shared/originals:/originals
      - ./shared/splitter_output:/splitter_output
      - ./shared/spleeter_models:/app/pretrained_models
    depends_on:
      - rabbitmq
    # ports:
    #   - "${SPLITTER_PORT:-9003}:9003"
    restart: unless-stopped

  converter:
    build: ./converter
    container_name: "${PREFIX}converter"
    volumes:
      - ./shared/splitter_output:/splitter_output
      - ./shared/converted_output:/converted_output
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
    depends_on:
      - rabbitmq
    # ports:
    #   - "${CONVERTER_PORT:-9004}:9004"
    restart: unless-stopped

  combiner:
    build: ./combiner
    container_name: "${PREFIX}combiner"
    volumes:
      - ./shared/pipeline:/pipeline
      - ./shared/splitter_output:/splitter_output
      - ./shared/music:/music
    depends_on:
      - converter
      - rabbitmq
    # ports:
    #   - "${COMBINER_PORT:-9005}:9005"
    restart: unless-stopped

  metadata:
    build: ./metadata
    container_name: "${PREFIX}metadata"
    volumes:
      - ./shared/music:/music
      - ./shared/pipeline:/pipeline
      - ./shared/converted_output:/converted_output
      - ./shared/splitter_output:/splitter_output
    depends_on:
      - rabbitmq
    # ports:
    #   - "${METADATA_PORT:-9006}:9006"
    restart: unless-stopped

  cleanup:
    build: ./cleanup
    container_name: "${PREFIX}cleanup"
    volumes:
      - ./shared/pipeline:/pipeline
      - ./shared/splitter_output:/splitter_output
      - ./shared/music:/music
      - ./shared/originals:/originals
    depends_on:
      - rabbitmq
    # ports:
    #   - "${CLEANUP_PORT:-9007}:9007"
    restart: unless-stopped

  navidrome:
    image: deluan/navidrome:latest
    container_name: "${PREFIX}navidrome"
    user: "${PUID}:${PGID}"
    ports:
      - "${NAVIDROME_PORT:-4533}:4533"
    volumes:
      - ./navidrome/data:/data
      - ./shared/music:/music:ro
    restart: unless-stopped

  deemix:
    image: registry.gitlab.com/bockiii/deemix-docker
    container_name: "${PREFIX}deemix"
    volumes:
      - ./shared/downloads:/downloads
      - ./deemix/config:/config
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - ARL=1234567
    ports:
      - "${DEEMIX_PORT:-6595}:6595"
    restart: unless-stopped

volumes:
  rabbitmq_data:
  redis_data:
